syntax = "proto3";

option go_package = "domain";

package domain;

service domain {
}

enum ErrCode {
	Success = 0;
}

message CrawlerConf {
	message Rule {
		bool use_proxy = 1;
		string xpath = 2;
	}

	uint64 id = 1;
	uint32  created_at = 2;
	uint32  updated_at = 3;

	string crawl_url = 4;

	uint32 crawl_type = 5;

	Rule rule = 6;

	bool is_closed = 7;

	uint32 next_at = 8;

	uint32 interval = 9;

	string note = 10;
}

enum ProxyNodeType {
	ProxyNodeTypeNil = 0;
	ProxyNodeTypeVmess = 1;
	ProxyNodeTypeTrojan = 2;
	ProxyNodeTypeVless = 3;
	ProxyNodeTypeSS = 4;
	ProxyNodeTypeSSR = 5;
	ProxyNodeTypeSocket = 6;
	ProxyNodeTypeHttp = 7;
	ProxyNodeTypeSnell = 8;
}

message ProxyNode {
	message NodeDetail {
		string buf = 1;
	}

	uint64 id = 1;
	uint32 created_at = 2;
	uint32 updated_at = 3;

	// HOST:PORT
	// @v: max=1000
	string url = 4;

	uint32 proxy_node_type = 5;

	double proxy_speed = 7;

	double proxy_network_delay = 8;

	uint32 next_check_at = 9;

	uint32 check_interval = 10;

	uint64 crawl_id = 11;

	uint32 death_count = 12;

	bool is_close = 13;

	uint32 last_crawler_at = 14;

	uint64 available_count = 15;
}

message TohruFeed {
	uint64 id = 1;
	uint32 created_at = 2;
	uint32 updated_at = 3;

	// 用户的唯一标识
	string user_id = 4;

	// 用户上传的数量
	uint64 up_count = 5;

	string last_ip = 6;
}

